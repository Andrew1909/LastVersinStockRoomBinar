<Application x:Class="StockroomBinar.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:StockroomBinar"
             StartupUri="MainWindow.xaml">
    <!--DialogWindow/SplashScreen.xaml-->
    <!--MainWindow.xaml-->
   
    <Application.Resources>

        <ResourceDictionary>


            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
            <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Border x:Name="on" Width="25" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                    <TextBlock x:Name="onText" Text="On" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <Border x:Name="off" Width="25" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                                    <TextBlock x:Name="offText" Text="Off" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="on" Property="Background" Value="LightBlue"/>
                                    <Setter TargetName="onText" Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="off" Property="Background" Value="LightBlue"/>
                                    <Setter TargetName="offText" Property="Foreground" Value="White"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            

            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type Button}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Storyboard1">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.25"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.25"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="Storyboard2">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Label Name="lbl" Content="{TemplateBinding Content}" Background="Transparent" Height="{TemplateBinding Height}"
                           Width="{TemplateBinding Width}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="lbl" Value="#330091FF"/>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard x:Name="Storyboard_Copy1_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="lbl" Value="#000000FF"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




            <Style TargetType="TextBlock">

                <Setter Property="FontFamily" Value="Century Gothic"/>
            </Style>
            <Style TargetType="ComboBox">
               
                <Setter Property="Background" Value="Wheat"/>
            </Style>


            <Style TargetType="{x:Type TextBox}" x:Key="ModernText">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border CornerRadius="10" Background="White" Width="230" Height="40">
                                <Grid>
                                    <Rectangle StrokeThickness="1"/>
                                    <TextBox Margin="1" Text="{TemplateBinding Text}" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Padding="5" Foreground="Black" x:Name="SearchBox"/>
                                    <TextBlock IsHitTestVisible="False" Text="Поиск по цвету" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="11" Foreground="DarkGray">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}" x:Key="AddCoils">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border CornerRadius="10" Background="White" Width="230" Height="40">
                                <Grid>
                                    <Rectangle StrokeThickness="1"/>
                                    <TextBox Margin="1" Text="{TemplateBinding Text}" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Padding="5" Foreground="Black" x:Name="SearchBox"/>
                                    <TextBlock IsHitTestVisible="False" Text="Введите кол-во катушек" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="11" Foreground="DarkGray">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}" x:Key="AddColors">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border CornerRadius="10" Background="White" Width="230" Height="40">
                                <Grid>
                                    <Rectangle StrokeThickness="1"/>
                                    <TextBox Margin="1" Text="{TemplateBinding Text}" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" Padding="5" Foreground="Black" x:Name="SearchBox"/>
                                    <TextBlock IsHitTestVisible="False" Text="Введите название цвета" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="11" Foreground="DarkGray">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="7"/>
            </Style>

            <Style x:Key="MyWaterMarkStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            
                            <Grid>
                                <Border Background="White" BorderBrush="#FF7D8683" BorderThickness="1"/>
                                <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                                <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text" Value=""/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="DimGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="SearchBox" TargetType="{x:Type TextBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">

                            <Grid>
                                <Border Background="#464451" BorderBrush="#464451" BorderThickness="1"/>
                                <Image x:Name="PicSearch" Source="Image/searchIco.png" Height="20" HorizontalAlignment="Left" Margin="5,0,0,0" Visibility="Collapsed" />
                                <Line x:Name="LineSearch" HorizontalAlignment="Left" Margin="23,0,0,0" VerticalAlignment="Center"  StrokeThickness="1" X1="10" X2="10" Y1="0" Y2="20" Stroke="Gray" Visibility="Collapsed" />
                                <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                                <Label  x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center" Margin="35,0,0,0" 
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Text" Value=""/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="PicSearch" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="LineSearch" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False" >
                                    <Setter Property="Foreground" Value="DimGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="dd" TargetType="{x:Type ComboBox}">
                <Setter Property="Background" Value="Red">
                 
                </Setter>
            </Style>

            <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Yellow"/>
                <!-- Custom value -->
                <Setter Property="BorderBrush" Value="Yellow"/>
                <!-- Custom value -->
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>

            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
